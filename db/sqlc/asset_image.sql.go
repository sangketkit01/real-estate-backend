// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: asset_image.sql

package db

import (
	"context"
)

const deleteImage = `-- name: DeleteImage :exec
DELETE FROM asset_images
WHERE id = $1
`

func (q *Queries) DeleteImage(ctx context.Context, id int64) error {
	_, err := q.db.ExecContext(ctx, deleteImage, id)
	return err
}

const getImageById = `-- name: GetImageById :one
SELECT id, asset_id, image_url FROM asset_images
WHERE id = $1
`

func (q *Queries) GetImageById(ctx context.Context, id int64) (AssetImage, error) {
	row := q.db.QueryRowContext(ctx, getImageById, id)
	var i AssetImage
	err := row.Scan(&i.ID, &i.AssetID, &i.ImageUrl)
	return i, err
}

const insertAssetImage = `-- name: InsertAssetImage :one
INSERT INTO asset_images 
    (asset_id, image_url)
VALUES 
    ($1, $2)
RETURNING id, asset_id, image_url
`

type InsertAssetImageParams struct {
	AssetID  int64  `json:"asset_id"`
	ImageUrl string `json:"image_url"`
}

func (q *Queries) InsertAssetImage(ctx context.Context, arg InsertAssetImageParams) (AssetImage, error) {
	row := q.db.QueryRowContext(ctx, insertAssetImage, arg.AssetID, arg.ImageUrl)
	var i AssetImage
	err := row.Scan(&i.ID, &i.AssetID, &i.ImageUrl)
	return i, err
}
